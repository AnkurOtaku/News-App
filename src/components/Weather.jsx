import React, { useEffect, useState, useContext } from "react";
import axios from "axios";
import Loading from "./Loading";
import { AppContext } from "../store/store";
// import {countryList} from '../country-by-capital-city.json'

function Weather() {
  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;
  const [weatherData, setWeatherData] = useState(null);
  const [error, setError] = useState(null);
  const { country } = useContext(AppContext);

  useEffect(() => {
    // get real location data
    console.log('inside useeffect');
    const getLiveData = async () => {
      try {
        const currentLocation = await new Promise((resolve, reject) => {
          navigator.geolocation.getCurrentPosition(
            (position) => {
              resolve({
                lat: position.coords.latitude,
                lon: position.coords.longitude,
              });
            },
            (error) => {
              reject(error);
            }
          );
        });
    
        console.log('Current location:', currentLocation);
    
        const response = await axios.get(
          "https://api.openweathermap.org/data/2.5/weather?",
          {
            params: {
              appid: apiKey,
              lat: currentLocation.lat,
              lon: currentLocation.lon,
            },
          }
        );
    
        const apiResponse = response.data;
        setWeatherData(apiResponse);
      } catch (error) {
        console.error("Error fetching current weather data:", error);
        setError("Error fetching current weather data");
      }
    };
    

    // data of desired country
    const fetchData = async () => {
      console.log('inside fetchdata');
      try {
        const city = await axios.get(
          "http://api.openweathermap.org/geo/1.0/direct?",
          {
            params: {
              q: country.capital,
              limit: 5,
              appid: apiKey,
            },
          }
        );
        const lat = city.data[0].lat;
        const lon = city.data[0].lon;
        console.log("lat and lon: " + lat, lon);

        try {
          console.log('inside 2nd try');
          const response = await axios.get(
            "https://api.openweathermap.org/data/2.5/weather?",
            {
              params: {
                appid: apiKey,
                lat: lat,
                lon: lon,
              },
            }
          );

          const apiResponse = response.data;
          setWeatherData(apiResponse);
        } catch (error) {
          console.error("Error fetching weather data:", error);
          setError("Error fetching weather data");
        }
      } catch (error) {
        console.error("Error fetching weather data:", error);
        setError("Error fetching weather data");
      }
    };

    country ? fetchData() : getLiveData();
  }, [country]);

  if (!weatherData) {
    return <Loading />;
  }

  return (
    <div className="w-full h-8 md:h-12 bg-[#37A7BF] text-black">
      {weatherData ? (
        <div className="mx-auto h-full max-w-5xl flex justify-evenly p-2">
          <div className="flex place-content-center items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="30"
              viewBox="0 0 37 30"
              fill="none"
            >
              <path
                d="M0.263184 22.5991C0.263184 23.8166 0.562225 24.9393 1.16031 25.9674C1.75839 26.9954 2.57396 27.8071 3.60701 28.4023C4.64006 28.9975 5.75467 29.2951 6.96443 29.2951H21.6854C22.8952 29.2951 24.0234 28.9975 25.0564 28.4023C26.0895 27.8071 26.9186 26.9954 27.5167 25.9674C28.1148 24.9393 28.4274 23.8166 28.4274 22.5991C28.4274 21.7063 28.2371 20.8 27.8565 19.8937C28.8896 18.6492 29.4061 17.1477 29.4061 15.4297C29.4061 14.4693 29.2158 13.5494 28.8488 12.6702C28.4818 11.7909 27.9653 11.0469 27.3264 10.4111C26.6876 9.77536 25.94 9.26133 25.0564 8.8961C24.1729 8.51734 23.2486 8.34148 22.2835 8.34148C20.2718 8.34148 18.5183 9.12606 17.0095 10.6952C15.9629 10.1 14.7395 9.80242 13.3394 9.80242C11.4229 9.80242 9.73736 10.3976 8.26933 11.5745C6.80131 12.7513 5.84982 14.2664 5.44203 16.1061C3.91964 16.4578 2.6827 17.2288 1.71761 18.4463C0.752524 19.6637 0.263184 21.0435 0.263184 22.5991ZM2.58755 22.5991C2.58755 21.4628 2.96815 20.4889 3.72934 19.6637C4.49054 18.8386 5.44204 18.3651 6.58383 18.2298L7.26347 18.1893C7.42658 18.1893 7.52173 18.1081 7.52173 17.9458L7.61688 17.2153C7.80718 15.7544 8.44604 14.5234 9.53346 13.5494C10.6209 12.562 11.8986 12.075 13.353 12.075C14.8482 12.075 16.1531 12.5755 17.2542 13.563C18.3688 14.5505 18.9804 15.7679 19.1164 17.2288L19.2115 18.0134C19.2387 18.1622 19.3339 18.2434 19.497 18.2434H21.6854C22.8816 18.2434 23.9146 18.6762 24.7846 19.542C25.6545 20.4077 26.0895 21.4223 26.0895 22.6126C26.0895 23.8436 25.6545 24.8852 24.7982 25.7509C23.9418 26.6167 22.8952 27.0496 21.699 27.0496H6.96443C5.76826 27.0496 4.7488 26.6167 3.87886 25.7374C3.02252 24.8582 2.58755 23.8166 2.58755 22.5991ZM11.6947 6.00128C11.6947 6.32594 11.8035 6.61001 12.0209 6.8535L12.9181 7.71923C13.2579 7.97625 13.5433 8.08447 13.788 8.05741C14.0735 8.05741 14.3181 7.93567 14.5356 7.70571C14.7531 7.47574 14.8618 7.19167 14.8618 6.86702C14.8618 6.54237 14.7395 6.27183 14.5084 6.06892L13.7064 5.17613C13.4618 4.95969 13.1899 4.85147 12.8773 4.85147C12.5511 4.85147 12.2656 4.95969 12.0345 5.18965C11.8035 5.40609 11.6947 5.67663 11.6947 6.00128ZM18.9533 11.9938C19.8912 11.0875 21.0058 10.6411 22.2835 10.6411C23.6292 10.6411 24.771 11.101 25.7089 12.0344C26.6468 12.9678 27.1225 14.0905 27.1225 15.4297C27.1225 16.2684 26.8915 17.1071 26.4293 17.9187C25.1108 16.6201 23.534 15.9708 21.6854 15.9708H21.2504C20.9106 14.4963 20.1494 13.1707 18.9533 11.9938ZM21.1689 4.85147C21.1689 5.20318 21.2776 5.47372 21.4815 5.69016C21.6854 5.90659 21.9573 6.00128 22.2835 6.00128C22.6369 6.00128 22.9088 5.89307 23.1262 5.69016C23.3437 5.47372 23.4389 5.20318 23.4389 4.85147V2.0784C23.4389 1.75375 23.3301 1.49674 23.1127 1.2803C22.8952 1.06387 22.6233 0.969177 22.2835 0.969177C21.9573 0.969177 21.699 1.07739 21.4815 1.2803C21.264 1.48321 21.1689 1.75375 21.1689 2.0784V4.85147ZM28.6721 7.9492C28.6721 8.3009 28.7673 8.57145 28.9711 8.78788C29.2566 9.00431 29.542 9.11253 29.8139 9.11253C30.0586 9.11253 30.3304 9.00431 30.6159 8.78788L32.5596 6.8535C32.7771 6.61001 32.8859 6.32593 32.8859 5.98776C32.8859 5.6631 32.7771 5.39256 32.5596 5.17613C32.3422 4.95969 32.0703 4.85147 31.7577 4.85147C31.4314 4.85147 31.1732 4.95969 30.9693 5.17613L28.9711 7.11051C28.7673 7.36753 28.6721 7.63807 28.6721 7.9492ZM29.7459 23.9654C29.7459 24.29 29.8547 24.5741 30.0858 24.8176L30.9693 25.6698C31.1732 25.8862 31.4314 25.9944 31.7577 25.9944C32.0839 25.9944 32.3558 25.8862 32.5732 25.6563C32.7907 25.4263 32.8995 25.1558 32.8995 24.8176C32.8995 24.52 32.7907 24.2494 32.5732 24.033L31.6897 23.1537C31.4722 22.9373 31.214 22.8291 30.9149 22.8291C30.5887 22.8291 30.3168 22.9373 30.0993 23.1537C29.8683 23.3702 29.7459 23.6407 29.7459 23.9654ZM31.7441 15.4297C31.7441 15.7408 31.8664 15.9979 32.0975 16.2143C32.315 16.4307 32.6004 16.5389 32.9266 16.5389H35.6996C36.0122 16.5389 36.2705 16.4307 36.488 16.2278C36.7054 16.0249 36.8006 15.7544 36.8006 15.4297C36.8006 15.1051 36.6918 14.8345 36.488 14.6181C36.2841 14.4017 36.0122 14.2799 35.6996 14.2799H32.9266C32.6004 14.2799 32.3286 14.3881 32.0975 14.6181C31.8528 14.8481 31.7441 15.1186 31.7441 15.4297Z"
                fill="black"
              />
            </svg>
            <div className="mx-2 capitalize">{weatherData.weather[0].main}</div>
          </div>
          <div className="flex place-content-center items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="26"
              height="30"
              viewBox="0 0 30 30"
              fill="none"
            >
              <path
                d="M24.0754 29.1419C20.8529 29.1419 18.2226 26.4351 18.2226 23.1188V22.4102C18.2226 21.8291 18.6909 21.3472 19.2555 21.3472C19.8201 21.3472 20.2883 21.8291 20.2883 22.4102V23.1188C20.2883 25.2729 21.9822 27.0161 24.0754 27.0161C26.1686 27.0161 27.8624 25.2729 27.8624 23.1188C27.8624 20.9646 26.1686 19.2214 24.0754 19.2214H1.35302C0.788408 19.2214 0.32019 18.7396 0.32019 18.1585C0.32019 17.5774 0.788408 17.0956 1.35302 17.0956H24.0754C27.2978 17.0956 29.9281 19.8025 29.9281 23.1188C29.9281 26.4351 27.2978 29.1419 24.0754 29.1419Z"
                fill="#292D32"
              />
              <path
                d="M24.0754 14.9697H1.35302C0.788408 14.9697 0.32019 14.4878 0.32019 13.9068C0.32019 13.3257 0.788408 12.8439 1.35302 12.8439H24.0754C26.1686 12.8439 27.8624 11.1007 27.8624 8.94652C27.8624 6.79235 26.1686 5.04917 24.0754 5.04917C21.9822 5.04917 20.2883 6.79235 20.2883 8.94652V9.65513C20.2883 10.2362 19.8201 10.718 19.2555 10.718C18.6909 10.718 18.2226 10.2362 18.2226 9.65513V8.94652C18.2226 5.63023 20.8529 2.92334 24.0754 2.92334C27.2978 2.92334 29.9281 5.63023 29.9281 8.94652C29.9281 12.2628 27.2978 14.9697 24.0754 14.9697Z"
                fill="#292D32"
              />
              <path
                d="M11.4197 10.7196H1.35302C0.788408 10.7196 0.32019 10.2378 0.32019 9.65673C0.32019 9.07567 0.788408 8.59382 1.35302 8.59382H11.4197C12.8932 8.59382 14.0913 7.36084 14.0913 5.84441C14.0913 4.32799 12.8932 3.09501 11.4197 3.09501C9.9462 3.09501 8.74811 4.32799 8.74811 5.84441V6.38295C8.74811 6.96401 8.2799 7.44587 7.71528 7.44587C7.15066 7.44587 6.68245 6.97819 6.68245 6.38295V5.84441C6.68245 3.15169 8.8032 0.969177 11.4197 0.969177C14.0362 0.969177 16.157 3.15169 16.157 5.84441C16.157 8.53713 14.0362 10.7196 11.4197 10.7196Z"
                fill="#292D32"
              />
            </svg>
            <div className="mx-2">{weatherData.wind.speed}km/hr</div>
          </div>
          <div className="flex place-content-center items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="30"
              viewBox="0 0 25 30"
              fill="none"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M16.0223 17.6473C15.7137 17.638 15.4067 17.686 15.126 17.7875C14.8452 17.889 14.5986 18.0412 14.406 18.2317C14.0071 18.6213 13.8065 19.1147 13.8065 19.7118C13.8065 20.3126 14.0048 20.8078 14.4013 21.1938C14.7979 21.5816 15.3375 21.7745 16.02 21.7745C16.7094 21.7745 17.2489 21.5816 17.6432 21.1974C18.0375 20.8133 18.2335 20.3163 18.2335 19.7118C18.2335 19.0983 18.0375 18.6013 17.6455 18.2208C17.2582 17.8367 16.7163 17.6473 16.0223 17.6473ZM16.0223 21.0245C15.2983 21.0245 14.934 20.5857 14.934 19.7082C14.934 18.8307 15.296 18.3919 16.0223 18.3919C16.7463 18.3919 17.1106 18.8307 17.1106 19.7082C17.1083 20.5875 16.7463 21.0245 16.0223 21.0245ZM11.254 15.4718C11.6483 15.0876 11.8443 14.5906 11.8443 13.9862C11.8443 13.3726 11.6483 12.8756 11.2586 12.4951C10.8666 12.1146 10.3248 11.9235 9.63074 11.9235C8.95285 11.9235 8.41331 12.1183 8.01441 12.5079C7.61552 12.8975 7.41492 13.3909 7.41492 13.988C7.41492 14.5888 7.61321 15.084 8.0098 15.4699C8.40639 15.8577 8.94594 16.0507 9.62844 16.0507C10.3179 16.0507 10.8597 15.8577 11.254 15.4718ZM8.54243 13.9862C8.54243 13.1087 8.90443 12.6699 9.63074 12.6699C10.3571 12.6699 10.7191 13.1087 10.7191 13.9862C10.7191 14.8637 10.3571 15.3024 9.63074 15.3024C8.90443 15.3024 8.54243 14.8637 8.54243 13.9862ZM16.5803 11.9999C16.4289 11.9274 16.2472 11.9053 16.0752 11.9384C15.9031 11.9715 15.7548 12.0572 15.6626 12.1765L8.84909 20.9717C8.78791 21.0516 8.75468 21.1429 8.75278 21.2363C8.75088 21.3297 8.78039 21.4218 8.83829 21.5032C8.89618 21.5846 8.9804 21.6525 9.08235 21.6998C9.1843 21.7472 9.30034 21.7723 9.41861 21.7727C9.53321 21.7733 9.646 21.7502 9.74587 21.7058C9.84574 21.6614 9.92923 21.5973 9.98813 21.5197L16.8016 12.7245C16.8475 12.6655 16.8782 12.5999 16.8919 12.5315C16.9056 12.4631 16.902 12.3933 16.8815 12.3259C16.8609 12.2586 16.8237 12.1952 16.772 12.1392C16.7203 12.0833 16.6552 12.036 16.5803 11.9999Z"
                fill="black"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M12.8265 0.969177C12.8265 0.969177 0.8573 14.6452 0.8573 19.8684C0.8573 25.0916 6.21125 29.3172 12.8265 29.3172C19.4417 29.3172 24.7956 25.0916 24.7956 19.8684C24.7956 14.6452 12.8265 0.969177 12.8265 0.969177ZM19.6376 22.4864C18.7246 22.501 18.2012 22.6321 16.2597 23.1254L15.983 23.1946C14.6549 23.6133 13.5505 23.8409 12.8795 23.8409C11.7497 23.8409 9.88662 23.2256 9.86817 23.2183L9.49003 23.12C7.45405 22.6047 6.96984 22.4828 6.15591 22.4755C5.41346 22.4755 4.66871 22.572 3.88475 22.7668C3.36531 21.8348 3.09452 20.8284 3.08927 19.8102C3.08927 16.9319 8.24493 9.6296 12.8218 4.04411C17.3988 9.63142 22.5567 16.9355 22.5567 19.8102C22.5567 20.8024 22.2916 21.7928 21.7682 22.7559C21.0782 22.5853 20.3606 22.4946 19.6376 22.4864Z"
                fill="black"
              />
            </svg>
            <div className="mx-2">{weatherData.main.humidity}</div>
          </div>
        </div>
      ) : error ? (
        <div>{error}</div>
      ) : (
        <div>Loading...</div>
      )}
    </div>
  );
}

export default Weather;
